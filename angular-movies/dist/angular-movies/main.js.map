{"version":3,"sources":["./src/app/utilities/input-img/input-img.component.ts","./src/app/utilities/input-img/input-img.component.html","./src/app/actors/selected-actor/selected-actor.component.ts","./src/app/actors/selected-actor/selected-actor.component.html","./src/app/genres/edit-genre/edit-genre.component.ts","./src/app/genres/edit-genre/edit-genre.component.html","./src/app/utilities/generic-list/generic-list.component.html","./src/app/utilities/generic-list/generic-list.component.ts","./src/app/movies/form-movie/form-movie.component.ts","./src/app/movies/form-movie/form-movie.component.html","./src/environments/environment.ts","./src/app/actors/edit-actor/edit-actor.component.ts","./src/app/actors/edit-actor/edit-actor.component.html","./src/app/actors/create-actor/create-actor.component.ts","./src/app/actors/create-actor/create-actor.component.html","./src/app/movie-theater/edit-movie-theater/edit-movie-theater.component.ts","./src/app/movie-theater/edit-movie-theater/edit-movie-theater.component.html","./src/app/Validators/firstLetterUppercase.ts","./src/app/actors/index-actor/index-actor.component.ts","./src/app/actors/index-actor/index-actor.component.html","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/movie-theater/movie-theater-form/movie-theater-form.component.ts","./src/app/movie-theater/movie-theater-form/movie-theater-form.component.html","./src/app/utilities/map/map.component.ts","./src/app/utilities/map/map.component.html","./src/app/genres/genres.service.ts","./src/app/utilities/utils.ts","./src/app/movie-theater/create-movie-theater/create-movie-theater.component.ts","./src/app/movie-theater/create-movie-theater/create-movie-theater.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/utilities/input-markdown/input-markdown.component.ts","./src/app/utilities/input-markdown/input-markdown.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/utilities/multiple-selector/multiple-selector.component.html","./src/app/utilities/multiple-selector/multiple-selector.component.ts","./src/app/movie-theater/index-movie-theater/index-movie-theater.component.ts","./src/app/movie-theater/index-movie-theater/index-movie-theater.component.html","./src/app/movies/edit-movie/edit-movie.component.ts","./src/app/movies/edit-movie/edit-movie.component.html","./src/app/genres/form-genres/form-genres.component.ts","./src/app/genres/form-genres/form-genres.component.html","./src/app/app.module.ts","./src/app/movies/movie-filter/movie-filter.component.html","./src/app/movies/movie-filter/movie-filter.component.ts","./src/app/material/material.module.ts","./src/app/genres/index-genres/index-genres.component.html","./src/app/genres/index-genres/index-genres.component.ts","./src/app/actors/from-actor/from-actor.component.ts","./src/app/actors/from-actor/from-actor.component.html","./src/app/utilities/display-errors/display-errors.component.html","./src/app/utilities/display-errors/display-errors.component.ts","./src/app/genres/create-genre/create-genre.component.ts","./src/app/genres/create-genre/create-genre.component.html","./src/app/app-routing.module.ts","./src/app/utiliteis/rating/rating.component.ts","./src/app/utiliteis/rating/rating.component.html","./src/app/movies/movies-list/movies-list.component.html","./src/app/movies/movies-list/movies-list.component.ts","./src/app/movies/create-movie/create-movie.component.ts","./src/app/movies/create-movie/create-movie.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { toBase64 } from '../utils';\n\n@Component({\n  selector: 'app-input-img',\n  templateUrl: './input-img.component.html',\n  styleUrls: ['./input-img.component.css']\n})\nexport class InputImgComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() currentImageSelected: string;\n  \n  @Output() onImageSelected= new  EventEmitter<File>();\n  imageBase64: string;\n\n  ngOnInit(): void {\n  }\n\n  change(event)\n  {\n  \n    if(event.target.files.length >0)\n    {\n      const file: File= event.target.files[0];\n      toBase64(file).then((value: string) => {\n        this.imageBase64= value;\n      });\n\n      this.onImageSelected.emit(file);\n      this.currentImageSelected= null;\n    }\n  }\n}\n","<div>\n    <button type=\"button\" mat-raised-button (click)=\"fileInput.click()\" >Select Image</button>\n\n    <input type=\"file\" hidden #fileInput  accept=\"image/png, image/jpg, image/jpeg\" (change)=\"change($event)\" />\n\n    <div>\n        <div *ngIf=\"imageBase64\">\n                <img [src]=\"imageBase64\" />\n        </div>\n\n        <div *ngIf=\"currentImageSelected\">\n            <img [src]=\"currentImageSelected\" />\n    </div>\n    </div>\n</div>","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteModule, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatTable } from '@angular/material/table';\n\n@Component({\n  selector: 'app-selected-actor',\n  templateUrl: './selected-actor.component.html',\n  styleUrls: ['./selected-actor.component.css']\n})\n\n\nexport class SelectedActorComponent implements OnInit {\n\n  constructor() { }\n\n  control: FormControl = new FormControl();\n\n\n  @ViewChild(MatTable) table: MatTable<any>;\n  columnsToDisplay=['picture','name','Characotr','actions'];\n\n  actors=[\n    {name:\"Robert De Niro\", picture:\"https://m.media-amazon.com/images/M/MV5BMjAwNDU3MzcyOV5BMl5BanBnXkFtZTcwMjc0MTIxMw@@._V1_UY209_CR9,0,140,209_AL_.jpg\"},\n    {name:\"Jack Nicholson\", picture:\"https://m.media-amazon.com/images/M/MV5BMTQ3OTY0ODk0M15BMl5BanBnXkFtZTYwNzE4Njc4._V1_UY209_CR5,0,140,209_AL_.jpg\"},\n    {name:\"Marlon Brando\", picture:\"https://m.media-amazon.com/images/M/MV5BMTg3MDYyMDE5OF5BMl5BanBnXkFtZTcwNjgyNTEzNA@@._V1_UY209_CR65,0,140,209_AL_.jpg\"},\n  ]\n\n  originalActors= this.actors;\n  selectedActor=[];\n  ngOnInit(): void {\n\n    this.control.valueChanges.subscribe(value=>{\n      this.actors = this.originalActors;\n      this.actors= this.actors.filter(actor=> actor.name.indexOf(value)!== -1)\n\n\n      if(this.table!== undefined)\n      {\n        this.table.renderRows();\n      }\n    })\n\n  }\n\n\n  onSelectedOption(event: MatAutocompleteSelectedEvent)\n  {\n    console.log(event.option.value);\n   var count=0;\n    for (let index = 0; index < this.selectedActor.length; index++) {\n        if(this.selectedActor[index] == event.option.value)\n        {\n            count= count+1;\n        }\n    }\n\n    if(count==0)\n    { console.log(\"value Not Exist\");\n    this.selectedActor.push(event.option.value);\n    this.control.patchValue('');\n      \n    }\n    else\n    {\n      console.log(\"value Exist\");\n      this.control.patchValue('');\n    }\n   \n  }\n\n\n  remove(actor)\n  {\n    const index = this.selectedActor.findIndex(s=>s.name == actor.name);\n\n    console.log(index);\n\n    this.selectedActor.splice(index,1);\n    this.table.renderRows();\n  }\n\n\n  droped(event: CdkDragDrop<any[]>)\n  {\n    const previousIndex= this.selectedActor.findIndex(actor=> actor === event.item.data);\n\n    moveItemInArray(this.selectedActor,previousIndex, event.currentIndex);\n\n    this.table.renderRows();\n  }\n}\n","<form>\n        <mat-form-field>\n            <input type=\"text\" placeholder=\"Select Actor\" matInput [formControl]=\"control\"\n             [matAutocomplete]=\"auto\" />\n        </mat-form-field> \n        \n        <mat-autocomplete #auto (optionSelected)=\"onSelectedOption($event)\">\n            <mat-option *ngFor=\"let actor of actors\" [value]=\"actor\">\n                <img [src]=\"actor.picture\"> {{actor.name}}\n            </mat-option>\n        </mat-autocomplete>\n\n</form>\n\n<ul>\n    <li *ngFor=\"let selectActor of selectedActor\">{{selectActor.name}}</li>\n</ul>\n\n<table mat-table *ngIf=\"selectedActor.length > 0\" [dataSource]=\"selectedActor\" \n    \n    cdkDropList\n    [cdkDropListData]=\"selectedActor\"\n    (cdkDropListDropped)=\"droped($event)\"\n    >\n    <ng-container matColumnDef=\"picture\">\n\n        <td mat-cell *matCellDef=\"let element\">\n            <img style=\"width: 50px;\"  [src]=\"element.picture\" />\n        </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\">\n        <td mat-cell *matCellDef=\"let element\">\n           {{element.name}}\n        </td>\n    </ng-container>\n    \n    <ng-container matColumnDef=\"Characotr\">\n        <td mat-cell *matCellDef=\"let element\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Charactor</mat-label>\n                    <input matInput [(ngModel)]=\"element.charactor\">\n                </mat-form-field>\n        </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n        <td mat-cell *matCellDef=\"let element\">\n                <mat-icon mat-list-icon (click)=\"remove(element)\">close</mat-icon>\n        </td>\n    </ng-container>\n\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay\" cdkDrag [cdkDragData]=\"row\"></tr>\n</table>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GenresModelDTO } from '../genres.model';\n\n@Component({\n  selector: 'app-edit-genre',\n  templateUrl: './edit-genre.component.html',\n  styleUrls: ['./edit-genre.component.css']\n})\nexport class EditGenreComponent implements OnInit {\n\n  constructor(private activatedRoute: ActivatedRoute) { }\n\n\n  model:GenresModelDTO= {name:\"Tayyab Bhatti\"}\n\n  \n  ngOnInit(): void {\n\n    this.activatedRoute.params.subscribe(params =>{\n  \n    })\n\n  }\n\n\n  saveChanges(genresDTO: GenresModelDTO)\n  {      \n    console.log(\"Edit save Genres Calling\");\n  }\n \n}\n","<p>edit-genre works!</p>\n\n\n\n\n<app-form-genres [model]=\"this.model\" (onSaveChanges)=\"saveChanges($event)\"></app-form-genres>","<h4>Movies Detail</h4>\n\n<div *ngIf=\"!list\">\n\n    <span #loading>\n        <ng-content select=[loading]></ng-content>\n    </span>\n    \n    <span *ngIf=\"!loading.innerHTML.trim()\">\n        \n        <img class=\"center\" *ngIf=\"!this.list\" src=\"https://media0.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif?cid=ecf05e47s6hwv8wlvbd56a3ccm7tz3n1icg8p3jjo75enish&rid=giphy.gif&ct=g\">\n\n    </span>\n    \n</div>\n\n<div *ngIf=\"this.list?.length ==0\" >\n   <h3>Date is loeading</h3>\n</div>\n\n<ng-container *ngIf=\"list != null && list?.length >0\">\n    \n    <ng-content select=\"[content]\"></ng-content>\n\n</ng-container>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-generic-list',\n  templateUrl: './generic-list.component.html',\n  styleUrls: ['./generic-list.component.css']\n})\nexport class GenericListComponent implements OnInit {\n\n  constructor() { }\n  @Input() list;\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { multipleSelectorModel } from 'src/app/utilities/multiple-selector/multiple-selec.model';\nimport { movieCreateDTO, movieDTO } from '../movie.model';\n\n@Component({\n  selector: 'app-form-movie',\n  templateUrl: './form-movie.component.html',\n  styleUrls: ['./form-movie.component.css']\n})\nexport class FormMovieComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  form: FormGroup;\n\n  @Input() model: movieDTO;\n\n\n  nonselectedGenras: multipleSelectorModel[]=[\n    {key:1, value:\"Movie11\"},\n    {key:2, value:\"Movie 2\"},\n    {key:3, value:\"Movie 3\"}\n  ]\n\n  selectedGenras: multipleSelectorModel[]=[];\n\n\n  selectedTheater: multipleSelectorModel[]=[\n    {key:1, value:\"Theater 1\"},\n    {key:2, value:\"Theater 2\"},\n    {key:3, value:\"Theater  3\"}\n  ]\n\n  nonselectedTheater: multipleSelectorModel[]=[];\n\n\n\n\n  @Output() onSaveChanges =new EventEmitter<movieCreateDTO>();\n  ngOnInit(): void {\n\n    this.form = this.formBuilder.group({\n      title:['',{\n        validators:[Validators.required]\n      }],\n      summary:'',\n      inTheater: false,\n      trailer:'',\n      releaseDate:'',\n      poster:'',\n      genrasId:'',\n      movieTheaterId:''\n    })\n      if(this.model!= null)\n      {\n        this.form.patchValue(this.model);\n      }\n  }\n\n  onImageSelected(file: File)\n  {\n    this.form.get('poster').setValue(file);\n  }\n\n  changeMarkDown(content: string)\n  {\n    this.form.get('summary').setValue(content);\n  }\n  saveChanges()\n  {\n    const genresIds= this.nonselectedGenras.map(value=> value.key);\n    this.form.get('genrasId').setValue(genresIds);\n\n    const movieThearerid=this.selectedTheater.map(value=> value.key);\n    this.form.get(\"movieTheaterId\").setValue(movieThearerid);\n\n    \n      this.onSaveChanges.emit(this.form.value);\n  }\n}\n","\n<form (submit)=\"saveChanges()\" [formGroup]=\"form\">\n    \n    <mat-form-field appearance=\"outline\">\n        <mat-label>Title*:</mat-label>\n        <input formControlName=\"title\" matInput />\n        <mat-error>This field is requried</mat-error>\n    </mat-form-field>\n\n    <div class=\"checkbox-container\">\n        <mat-checkbox formControlName=\"inTheater\"> In Theater</mat-checkbox>\n    </div>\n\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Release Date:</mat-label>\n        <input formControlName=\"releaseDate\" matInput [matDatepicker]=\"picker\"/>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <h3>Select Poster</h3>\n\n    <app-input-img [currentImageSelected]=\"model?.poster\" (onImageSelected)=\"onImageSelected($event)\"></app-input-img>\n\n    <h3>Summary</h3>\n\n    <app-input-markdown [markdownContent]=\"model?.summary\" (changeMarkdown)=\"changeMarkDown($event)\"></app-input-markdown>\n\n    <h4>Select Genras</h4>\n   <app-multiple-selector [selector]=\"selectedGenras\" [nonSelector]=\"nonselectedGenras\"></app-multiple-selector>\n\n   <h4>Select Movie Theater</h4>\n   <app-multiple-selector [selector]=\"selectedTheater\" [nonSelector]=\"nonselectedTheater\"></app-multiple-selector>\n\n    <h3>Select Actor</h3>\n    <app-selected-actor></app-selected-actor>\n    <div>\n        <button mat-flat-button color=\"primary\" [disabled]=\"form.invalid\">Save</button>\n        \n        <a mat-flat-button routerLink=\"/\">Cancel</a>\n    </div>\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'https://localhost:44353/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ActorModelDTO, EditActorModelDTO } from '../actor-model';\n\n@Component({\n  selector: 'app-edit-actor',\n  templateUrl: './edit-actor.component.html',\n  styleUrls: ['./edit-actor.component.css']\n})\nexport class EditActorComponent implements OnInit {\n\n  constructor(private activatedRoute: ActivatedRoute) { }\n\n  model: EditActorModelDTO = {name:\"Tayyab Bhatti\", deteOfBirth: new Date(), picture:'', biography:\"Default Value\"}\n  ngOnInit(): void {\n\n    this.activatedRoute.params.subscribe(params =>{\n      alert(params.id);\n    })\n  }\n\n\n\n\n  SaveForm(actorModel: ActorModelDTO)\n  {\n    console.log(actorModel);\n  }\n}\n","<p>edit-actor works!</p>\n\n\n<app-from-actor  [model]=\"this.model\" (onSaveChanges)=\"SaveForm($event)\"></app-from-actor>","import { Component, OnInit } from '@angular/core';\nimport { ActorModelDTO } from '../actor-model';\n\n@Component({\n  selector: 'app-create-actor',\n  templateUrl: './create-actor.component.html',\n  styleUrls: ['./create-actor.component.css']\n})\nexport class CreateActorComponent implements OnInit {\n\n  constructor() { }\n\n  errors: string[]=[];\n\n  ngOnInit(): void {\n  }\n\n\n  SaveForm(actorModel: ActorModelDTO)\n  {\n    console.log(actorModel);\n  }\n\n}\n","<p>create-actor works!</p>\n\n<app-from-actor  (onSaveChanges)=\"SaveForm($event)\"></app-from-actor>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { movieTheaterCreationDTO, movieTheaterDTO } from '../movie-theader.model';\n\n@Component({\n  selector: 'app-edit-movie-theater',\n  templateUrl: './edit-movie-theater.component.html',\n  styleUrls: ['./edit-movie-theater.component.css']\n})\nexport class EditMovieTheaterComponent implements OnInit {\n\n  constructor(private activatedRoute: ActivatedRoute) { }\n\n  model: movieTheaterDTO={name:\"this is default\", long:-111.75292968750001,lati:41.21172151054787};\n  ngOnInit(): void {\n\n    this.activatedRoute.params.subscribe(params =>{\n  \n    })\n\n  }\n\n  SaveChanges(theaterMovie: movieTheaterCreationDTO)\n  {\n    console.log(theaterMovie);\n  }\n\n}\n","<p>edit-movie-theater works!</p>\n\n\n\n<app-movie-theater-form [model]=\"this.model\" (onSaveChanger)=\"SaveChanges($event)\"></app-movie-theater-form>","import { AbstractControl, Validators } from \"@angular/forms\";\r\n\r\nexport function firstlatterUppercase(): Validators\r\n{\r\n    return (control: AbstractControl) => {\r\n        const value = <string>control.value;\r\n\r\n        if(!value) return;\r\n\r\n        if(value.length==0) return;\r\n\r\n        const firstLetter = value[0];\r\n\r\n        if(firstLetter!= firstLetter.toUpperCase())\r\n        {\r\n            return {\r\n                firstlatterUppercase: {\r\n                    message: 'The First Letter must be upperCase'\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-index-actor',\n  templateUrl: './index-actor.component.html',\n  styleUrls: ['./index-actor.component.css']\n})\nexport class IndexActorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>index-actor works!</p>\n\n\n<button mat-button color=\"primary\" routerLink=\"/actors/create\">Create New Actors</button>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n \n  title = 'angular-movies';\n\n  // movies;\n\n  moviesInThethor;\n\n  moviesInFutureReleaase;\n\n  ngOnInit(): void {\n\n    setTimeout(() => {\n      this.moviesInFutureReleaase =[\n        {\n        title: \"This is tile Movies in Future\",\n        releaseDate : new Date(),\n        imgPath:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSa74CnMZAbTrXL2a1X8GHrVbAq9-xV0ESFHA&usqp=CAU',\n\n      },\n      {\n        title: \"This is second title Future\",\n        releaseDate : new Date(\"2016-02-4\"),\n        imgPath:'https://www.imb.org/photos/wp-content/uploads/sites/5/2021/01/206800439-600x400.jpg',\n      },\n      {\n        title: \"This is Thirst title Future\",\n        releaseDate : new Date(\"2016-02-4\"),\n        imgPath:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSpfnOc_yeoi_QF3PdDUiI1gFcfmlBmJS80nBO2uqwvyNtKdCRBdY_lTzN1v2_zzXBvPnE&usqp=CAU',\n      }\n\n      ];\n    \n      \n    }, 1000);\n  }\n \n\n}\n","<h2>Future Release Movies</h2>\n<app-movies-list [movies]=\"this.moviesInFutureReleaase\"></app-movies-list>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CoordinateMap } from 'src/app/utilities/map/cordinate';\nimport { movieTheaterCreationDTO, movieTheaterDTO } from '../movie-theader.model';\n\n@Component({\n  selector: 'app-movie-theater-form',\n  templateUrl: './movie-theater-form.component.html',\n  styleUrls: ['./movie-theater-form.component.css']\n})\nexport class MovieTheaterFormComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  form: FormGroup;\n\n  @Input() model: movieTheaterDTO;\n\n  initialCoordinates: CoordinateMap[]= [];\n\n  @Output() onSaveChanger= new EventEmitter<movieTheaterCreationDTO>();\n  ngOnInit(): void {\n    this.form= this.formBuilder.group({\n      name:['',[Validators.required]],\n      long:['',{\n        Validators:[Validators.required]\n      }],\n      lati:['',{\n        Validators:[Validators.required]\n      }]\n    });\n\n    if(this.model!= null)\n    {\n      this.form.patchValue(this.model);\n\n      this.initialCoordinates.push({lati:this.model.lati, long: this.model.long});\n    }\n\n  }\n\n  onSelectedMapLocation(cordinate: CoordinateMap)\n  {\n    this.form.patchValue(cordinate);\n  }\n\n  SaveChanges()\n  {\n    this.onSaveChanger.emit(this.form.value);\n  }\n\n}\n","\n<form [formGroup]=\"form\" (submit)=\"SaveChanges()\">\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Name*</mat-label>\n        <input formControlName=\"name\" matInput />\n        <mat-error>The name field is required</mat-error>\n    </mat-form-field>\n    <app-map [initialCordinates]=\"initialCoordinates\" (onSelectedMap)=\"onSelectedMapLocation($event)\"></app-map>\n\n    <div>\n        <button mat-flat-button color=\"primary\" [disabled]=\"form.invalid\">Save Changes</button>\n        <a mat-stroked-button routerLink=\"/movietheater\">Cancel</a>\n    </div>\n</form>","\nimport * as L from 'leaflet';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CoordinateMap } from './cordinate';\n//import { latLng, tileLayer } from 'leaflet';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n \n    this.initialCordinates.map(value => L.marker([value.lati,value.long]));\n  }\n\n  @Input() initialCordinates: CoordinateMap[]=[];\n\n\n  @Output() onSelectedMap = new EventEmitter<CoordinateMap>();\n  map: L.Map;\n\n  layers: L.Marker<any>[]= [];\n\n  Mapoptions = {\n    layers: [\n      L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { maxZoom: 18, attribution: 'Angular Project' })\n    ],\n    zoom: 5,\n    center: L.latLng(46.879966, -121.726909)\n  };\n\n\n        // get the reference to the map\n      onMapReady(map: L.Map) {\n        this.map = map;\n      }\n\n      // change the view using that map reference to another location\n      changeView() {\n        this.map.panTo(new L.LatLng(40.737, -73.923));\n      }\n\n\n      leafletMapClick(evnet: L.LeafletMouseEvent)\n      {\n        const latitude= evnet.latlng.lat;\n\n        const longitude= evnet.latlng.lng;\n\n      //  console.log({latitude, longitude});\n\n        this.layers=[];\n        this.layers.push(L.marker([latitude, longitude]));\n\n        this.onSelectedMap.emit({long: longitude,lati: latitude});\n      }\n}\n","<div class=\"map\" style=\"height: 500px;\"\n    leaflet \n    [leafletOptions]=\"this.Mapoptions\"\n    \n    (leafletMapReady)=\"onMapReady($event)\"\n    [leafletLayers]=\"this.layers\"\n    (leafletClick)=\"leafletMapClick($event)\"\n    >\n</div>\n\n<!-- <button (click)=\"changeView()\">Change view</button> -->\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { GenresDTO, GenresModelDTO } from './genres.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenresService {\n\n  constructor(private http: HttpClient) { }\n\n  private apiUrl= environment.apiUrl +\"/genres\";\n\n  getAll():Observable<GenresDTO[]>\n  {\n    return this.http.get<GenresDTO[]>(this.apiUrl);\n  }\n\n\n  CreateGenres(genres: GenresModelDTO)\n  {\n    return this.http.post(this.apiUrl,genres);\n  }\n}\n\n\n","\r\nexport function toBase64(file: File)\r\n{\r\n    return new Promise((resolve,reject)=>{\r\n        const reader= new FileReader();\r\n        reader.readAsDataURL(file);\r\n\r\n        reader.onload =() => resolve(reader.result);\r\n        reader.onerror=(error)=> reject(error);\r\n    })\r\n}\r\n\r\n\r\nexport function ParseWebAPIsErrors(response:any): string[]\r\n{\r\n    const result: string[]=[];\r\n    \r\n        if(response.error)\r\n        {\r\n            if(typeof response.error =='string')\r\n            {\r\n                result.push(response.error());\r\n                \r\n            }\r\n            else\r\n            {\r\n                const mapError= response.error.errors;\r\n                const entries= Object.entries(mapError);\r\n\r\n                entries.forEach((arr: any[])=>{\r\n                    const filed= arr[0];\r\n                    arr[1].forEach(errorMessage=>{\r\n                        result.push(`${filed}: ${errorMessage}`);\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    \r\n    return result;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { movieTheaterCreationDTO } from '../movie-theader.model';\n\n@Component({\n  selector: 'app-create-movie-theater',\n  templateUrl: './create-movie-theater.component.html',\n  styleUrls: ['./create-movie-theater.component.css']\n})\nexport class CreateMovieTheaterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n  SaveChanges(theaterMovie: movieTheaterCreationDTO)\n  {\n    console.log(theaterMovie);\n  }\n}\n","<p>create-movie-theater works!</p>\n\n\n<app-movie-theater-form (onSaveChanger)=\"SaveChanges($event)\"></app-movie-theater-form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  title = 'angular-movies';\n  HandleRatingFunction(rate: number)\n  {\n    alert(`The user selected ${rate} Starts`);\n  }\n}\n","\n<app-menu></app-menu>\n\n<app-rating (onRating)=\"HandleRatingFunction($event)\"></app-rating>\n\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>\n\n\n<!-- <h2>Now  Release Movies</h2>\n\n<app-movies-list [movies]=\"this.moviesInThethor\"></app-movies-list> -->\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-input-markdown',\n  templateUrl: './input-markdown.component.html',\n  styleUrls: ['./input-markdown.component.css']\n})\nexport class InputMarkdownComponent implements OnInit {\n\n  constructor() { }\n\n  @Output() changeMarkdown = new EventEmitter<string>();\n  @Input() markdownContent: string;\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group>\n    <mat-tab label=\"Edit\">\n        <mat-form-field appearance=\"outline\" (change)=\"changeMarkdown.emit($event.target.value)\">\n            <mat-label>Biography </mat-label>\n            <textarea [(ngModel)]=\"markdownContent\" matInput></textarea>\n        </mat-form-field>\n    \n    </mat-tab>\n    <mat-tab label=\"Preview\">\n        <markdown [data]=\"markdownContent\" ngPreserveWideSpace></markdown>\n    </mat-tab>\n  </mat-tab-group>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <span>\n      <a mat-button routerLink=\"/\">\n          <mat-icon>lock_open</mat-icon>\n        Movies App</a>\n    </span>\n\n    <div>\n      <a mat-button routerLink=\"movies/filter\" >\n        <mat-icon>search</mat-icon> Movies Filter\n      </a>\n    </div>\n\n    <div>\n      <a  mat-button routerLink=\"genres\">Generes</a>\n    </div>\n\n    <div>\n      <a  mat-button routerLink=\"movietheater\">Movies Theather</a>\n    </div>\n   \n    <div>\n      <a  mat-button routerLink=\"actors\">Actors List</a>\n    </div>\n   \n    <div>\n      <a  mat-button routerLink=\"movies/create\">Create Movies</a>\n    </div>\n  </mat-toolbar>","<div class=\"container\">\n   \n    \n    <ul>\n        <li *ngFor=\"let item of selector; let index = index\" (click)=\"deSelect(item, index)\">\n            {{item.value}}\n         </li>\n    </ul>\n    <div class=\"container-buttons\">\n        <button type=\"button\" (click)=\"selectAll()\">select</button>\n        <button type=\"button\" (click)=\"deSelectAll()\">Deselect</button>\n    </div>\n    <ul>\n        <li *ngFor=\"let item of nonSelector; let index = index\" (click)=\"select(item, index)\">\n                {{item.value}}\n        </li>\n    </ul>\n\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { multipleSelectorModel } from './multiple-selec.model';\n\n@Component({\n  selector: 'app-multiple-selector',\n  templateUrl: './multiple-selector.component.html',\n  styleUrls: ['./multiple-selector.component.css']\n})\nexport class MultipleSelectorComponent implements OnInit {\n\n  constructor() { }\n\n\n  @Input() selector: multipleSelectorModel[]=[];\n\n  \n  @Input() nonSelector: multipleSelectorModel[]=[];\n\n  ngOnInit(): void {\n  }\n\n\n  select(item: multipleSelectorModel, index: number)\n  {\n    this.selector.push(item);\n    this.nonSelector.splice(index,1);\n  }\n\n\n  \n  deSelect(item: multipleSelectorModel, index: number)\n  {\n    this.nonSelector.push(item);\n    this.selector.splice(index,1);\n  }\n  selectAll()\n  {\n    this.selector.push(...this.nonSelector);\n    this.nonSelector=[];\n  }\n\n  deSelectAll()\n  {\n    // this.nonSelector.push(...this.selector);\n    // this.selector=[];\n\n     for (let index = 0; index < this.selector.length; index++) {\n        \n          this.nonSelector.push({key:this.selector[index].key, value: this.selector[index].value});\n     }\n\n     this.selector=[];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-index-movie-theater',\n  templateUrl: './index-movie-theater.component.html',\n  styleUrls: ['./index-movie-theater.component.css']\n})\nexport class IndexMovieTheaterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>index-movie-theater works!</p>\n\n<button mat-button color=\"primary\" routerLink=\"/movietheater/create\">Create New Theather</button>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { movieCreateDTO, movieDTO } from '../movie.model';\n\n@Component({\n  selector: 'app-edit-movie',\n  templateUrl: './edit-movie.component.html',\n  styleUrls: ['./edit-movie.component.css']\n})\nexport class EditMovieComponent implements OnInit {\n\n  constructor(private activatedRoute: ActivatedRoute) { }\n\n  model: movieDTO ={title:'Edit Movie',inTheater: true,releaseDate: new Date(),summary:'This is summary', \n  trailer:\"asdasd\" ,genrasId:3,poster:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSa74CnMZAbTrXL2a1X8GHrVbAq9-xV0ESFHA&usqp=CAU\"}\n  ngOnInit(): void {\n\n    this.activatedRoute.params.subscribe(params =>{\n  \n    })\n\n  }\n\n  SaveChanges(MovieForm: movieCreateDTO)\n  {\n    console.log(MovieForm);\n  }\n}\n","\n<app-form-movie [model]=\"model\" (onSaveChanges)=\"SaveChanges($event)\"></app-form-movie>","import { Component, EventEmitter, OnInit, Output, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { firstlatterUppercase } from 'src/app/Validators/firstLetterUppercase';\nimport { GenresModelDTO } from '../genres.model';\n\n@Component({\n  selector: 'app-form-genres',\n  templateUrl: './form-genres.component.html',\n  styleUrls: ['./form-genres.component.css']\n})\n\nexport class FormGenresComponent implements OnInit {\n\n  \n  constructor(private router: Router, private formBuilder: FormBuilder) { }\n\n  @Input()\n     model: GenresModelDTO;\n  \n  @Output() onSaveChanges: EventEmitter<GenresModelDTO> = new EventEmitter<GenresModelDTO>();\n  \n\n\n  form: FormGroup;\n  ngOnInit(): void {\n    \n    this.form= this.formBuilder.group({\n      name:['',{\n        validators:[Validators.required, Validators.minLength(3), firstlatterUppercase()]\n      }]\n    });\n\n\n    if(this.model !=undefined)\n    {\n      this.form.patchValue(this.model);\n    }\n  }\n\n  saveChanges()\n  {\n      this.onSaveChanges.emit(this.form.value);\n  }\n\n  \n  getErrorMessageFieldName()\n  {\n    const filed=this.form.get('name');\n\n    if(filed.hasError('required'))\n    {\n      return 'This name field is requried';\n    }\n\n    if(filed.hasError('minlength'))\n    {\n      return 'Min charactors should greater than 3'\n    }\n\n    if(filed.hasError('firstlatterUppercase'))\n    {\n      return filed.getError('firstlatterUppercase').message;\n    }\n    \n\n    return '';\n  }\n}\n","\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <form (submit)=\"saveChanges()\" [formGroup]=\"form\"> \n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Name</mat-label>\n                    <input formControlName=\"name\" matInput />\n\n                    <mat-error *ngIf=\"form.invalid\">{{getErrorMessageFieldName()}}</mat-error>\n                </mat-form-field>\n            \n            \n                <div>\n            \n                    <button mat-flat-button color='accent'  [disabled]=\"form.invalid\">Save Now</button>\n            \n                    <a mat-stroked-button color='red' routerLink=\"/genres\" >Cancel</a>\n                </div>\n            </form>\n        </div>\n        <div class=\"col-lg-6\"></div>\n    </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MoviesListComponent } from './movies/movies-list/movies-list.component';\nimport { GenericListComponent } from './utilities/generic-list/generic-list.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms'\nimport {MarkdownModule} from 'ngx-markdown';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport \"leaflet/dist/images/marker-icon.png\";\n//import \"leaflet/dist/images\";\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {MaterialModule} from 'src/app/material/material.module';\nimport {MenuComponent} from 'src/app/menu/menu.component';\nimport { RatingComponent } from './utiliteis/rating/rating.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { IndexGenresComponent } from './genres/index-genres/index-genres.component';\nimport { CreateGenreComponent } from './genres/create-genre/create-genre.component';\nimport { IndexActorComponent } from './actors/index-actor/index-actor.component';\nimport { CreateActorComponent } from './actors/create-actor/create-actor.component';\nimport { IndexMovieTheaterComponent } from './movie-theater/index-movie-theater/index-movie-theater.component';\nimport { CreateMovieTheaterComponent } from './movie-theater/create-movie-theater/create-movie-theater.component';\nimport { CreateMovieComponent } from './movies/create-movie/create-movie.component';\nimport { EditActorComponent } from './actors/edit-actor/edit-actor.component';\nimport { EditMovieComponent } from './movies/edit-movie/edit-movie.component';\nimport { EditMovieTheaterComponent } from './movie-theater/edit-movie-theater/edit-movie-theater.component';\nimport { EditGenreComponent } from './genres/edit-genre/edit-genre.component';\nimport { FormGenresComponent } from './genres/form-genres/form-genres.component';\nimport { MovieFilterComponent } from './movies/movie-filter/movie-filter.component';\nimport { FromActorComponent } from './actors/from-actor/from-actor.component';\nimport { InputImgComponent } from './utilities/input-img/input-img.component';\nimport { InputMarkdownComponent } from './utilities/input-markdown/input-markdown.component';\nimport { MovieTheaterFormComponent } from './movie-theater/movie-theater-form/movie-theater-form.component';\nimport { MapComponent } from './utilities/map/map.component';\nimport { FormMovieComponent } from './movies/form-movie/form-movie.component';\nimport { MultipleSelectorComponent } from './utilities/multiple-selector/multiple-selector.component';\nimport { SelectedActorComponent } from './actors/selected-actor/selected-actor.component';\nimport { DisplayErrorsComponent } from './utilities/display-errors/display-errors.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MoviesListComponent,\n    GenericListComponent,\n    MenuComponent,\n    RatingComponent,\n    HomePageComponent,\n    IndexGenresComponent,\n    CreateGenreComponent,\n    IndexActorComponent,\n    CreateActorComponent,\n    IndexMovieTheaterComponent,\n    CreateMovieTheaterComponent,\n    CreateMovieComponent,\n    EditActorComponent,\n    EditMovieComponent,\n    EditMovieTheaterComponent,\n    EditGenreComponent,\n    FormGenresComponent,\n    MovieFilterComponent,\n    FromActorComponent,\n    InputImgComponent,\n    InputMarkdownComponent,\n    MovieTheaterFormComponent,\n    MapComponent,\n    FormMovieComponent,\n    MultipleSelectorComponent,\n    SelectedActorComponent,\n    DisplayErrorsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ReactiveFormsModule,FormsModule,\n    LeafletModule,\n    HttpClientModule,\n    MarkdownModule.forRoot(),\n    \n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<h3>Search Movies</h3>\n\n\n<form [formGroup]=\"form\">\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Title</mat-label>\n        <input formControlName='title' matInput />\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Genra</mat-label>\n            <mat-select formControlName=\"genraId\">\n                <!-- <mat-option *ngFor=\"let gen of genres\" [value]=\"gen.id\" >{{gen.name}}</mat-option> -->\n            \n                <mat-option *ngFor=\"let g of genres\"  [value]=\"g.id\" >{{g.name}}</mat-option>\n             \n            </mat-select>\n    </mat-form-field>\n\n    <div>\n        <mat-checkbox formControlName=\"upcommingReleased\">UpComming Released</mat-checkbox>\n    </div>\n\n    <div>\n        <mat-checkbox formControlName=\"inTheaters\">In Theater Released</mat-checkbox>\n    </div>\n\n    <div>\n        <button mat-flat-button color=\"warn\" (click)=\"OnClear()\">Clear Form</button>\n    </div>\n</form>\n\n\n\n<app-movies-list [movies]=\"movies\"></app-movies-list>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-movie-filter',\n  templateUrl: './movie-filter.component.html',\n  styleUrls: ['./movie-filter.component.css']\n})\nexport class MovieFilterComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  genres= [{id:1, name:\"Action\"},{id:2, name:'Comedy'}];\n\n\n  movies=[\n    {\n      title: \"Comedy Movie\",\n      releaseDate : new Date(),\n      imgPath:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSa74CnMZAbTrXL2a1X8GHrVbAq9-xV0ESFHA&usqp=CAU',\n\n    },\n    {\n      title: \"This Movies\",\n      releaseDate : new Date(\"2016-02-4\"),\n      imgPath:'https://www.imb.org/photos/wp-content/uploads/sites/5/2021/01/206800439-600x400.jpg',\n    },\n    {\n      title: \"Mixture Movie\",\n      releaseDate : new Date(\"2016-02-4\"),\n      imgPath:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSpfnOc_yeoi_QF3PdDUiI1gFcfmlBmJS80nBO2uqwvyNtKdCRBdY_lTzN1v2_zzXBvPnE&usqp=CAU',\n    }\n  ]\n\n  originalMovies = this.movies\n\n\n  form: FormGroup;\n  ngOnInit(): void {\n    this.form= this.formBuilder.group({\n      title:'',\n      genraId:0,\n      upcommingReleased: false,\n      inTheaters:false,\n    });\n\n\n    this.form.valueChanges\n      .subscribe(value=>{\n        this.movies= this.originalMovies;\n        \n        this.filterMovie(value);\n      })\n\n\n  }\n\n\n  filterMovie(values: any)\n  {\n    if(values.title)\n    {\n     /// this.movies = this.movies.filter(mov=> mov.title.indexOf(values.title) !== -1); \n   \n     this.movies = this.movies.filter(mov=> mov.title.toLocaleLowerCase().indexOf(values.title.toLocaleLowerCase()) !== -1); \n    \n    }\n  }\n\n  \n\n  OnClear()\n  {\n      this.form.reset();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatToolbarModule} from '@angular/material/toolbar';\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\n\nimport {MatTabsModule} from '@angular/material/tabs';\n\nimport {MatTableModule} from '@angular/material/table';\n\n@NgModule({\n  declarations: [],\n  exports:[\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTabsModule,\n    MatAutocompleteModule,\n    MatTableModule\n  ],\n  imports: [\n    CommonModule\n  ]\n})\n\n\n\nexport class MaterialModule { }\n","<h3>Genres</h3>\n\n<button mat-button color=\"primary\" routerLink=\"/genres/create\">Create New</button>\n\n<app-generic-list [list]=\"genres\">\n\n    <ng-container content>\n        <table mat-table [dataSource]=\"genres\" class=\"mat-elevation-z8 table-index\">\n            <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef>\n                    Name\n                </th>\n                <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef>\n                    Actions\n                </th>\n                <td mat-cell *matCellDef=\"let element\">\n\n                        <a routerLink=\"/genres/edit/{{element.id}}\" mat-flat-button color=\"primary\" >Edit</a>\n\n\n                        <button mat-flat-button color=\"warn\">Delete</button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderCellDef=\"columnsToDisplay\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns:columnsToDisplay \"></tr>\n        </table>\n    </ng-container>\n\n</app-generic-list>","import { Component, OnInit } from '@angular/core';\nimport { GenresDTO } from '../genres.model';\nimport { GenresService } from '../genres.service';\n\n@Component({\n  selector: 'app-index-genres',\n  templateUrl: './index-genres.component.html',\n  styleUrls: ['./index-genres.component.css']\n})\nexport class IndexGenresComponent implements OnInit {\n\n  constructor(private genService: GenresService) { }\n\n  genres: GenresDTO[];\n\n  columnsToDisplay=[\"name\",'actions'];\n  ngOnInit(): void {\n\n\n      this.genService.getAll().subscribe(genres=>{\n        console.log(genres);\n\n      });\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActorModelDTO } from '../actor-model';\n\n@Component({\n  selector: 'app-from-actor',\n  templateUrl: './from-actor.component.html',\n  styleUrls: ['./from-actor.component.css']\n})\nexport class FromActorComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  @Input() model: ActorModelDTO;\n\n  @Output() onSaveChanges = new EventEmitter<ActorModelDTO>();\n\n  form: FormGroup;\n\n  ngOnInit(): void {\n    this.form= this.formBuilder.group({\n      name:['',{\n        validators:[Validators.required]\n      }],\n      deteOfBirth:'',\n      picture:'',\n      biography:''\n    });\n\n\n    if(this.model!= undefined)\n    {\n      this.form.patchValue(this.model);\n    }\n  }\n\n  selectedImage(image: File)\n  {\n    this.form.get('picture').setValue(image);\n  }\n\n  changeMarkdown(content: string)\n  {\n    this.form.get('biography').setValue(content);\n  }\n\n  saveChanges()\n  {\n    this.onSaveChanges.emit(this.form.value);\n  }\n\n}\n","\n<form [formGroup]=\"form\" (submit)=\"saveChanges()\">\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Name</mat-label>\n        <input formControlName=\"name\" matInput />\n    </mat-form-field>\n\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Date Of Birth</mat-label>\n        <input formControlName=\"deteOfBirth\" matInput [matDatepicker]=\"picker\" />\n\n\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n    <h4>Select Image</h4>\n    <app-input-img [currentImageSelected]=\"model?.picture\" (onImageSelected)=\"selectedImage($event)\"></app-input-img>\n\n    <h3>Bio</h3>\n\n    <app-input-markdown [markdownContent]='model?.biography' (changeMarkdown)=\"changeMarkdown($event)\"></app-input-markdown>\n    <div>\n        <button mat-flat-button  color=\"primary\" [disabled]=\"form.invalid\">Submit</button>\n\n        <a mat-flat-button color=\"warn\" routerLink=\"/actors\">Clear</a>\n    </div>\n</form>","<ul *ngIf=\"errors.length>0\">\n    <li *ngFor=\"let error of errors\">{{error}}</li>\n</ul>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-display-errors',\n  templateUrl: './display-errors.component.html',\n  styleUrls: ['./display-errors.component.css']\n})\nexport class DisplayErrorsComponent implements OnInit {\n\n  @Input()  errors: string[]=[];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ParseWebAPIsErrors } from 'src/app/utilities/utils';\nimport { firstlatterUppercase } from 'src/app/Validators/firstLetterUppercase';\nimport { GenresModelDTO } from '../genres.model';\nimport { GenresService } from '../genres.service';\n\n@Component({\n  selector: 'app-create-genre',\n  templateUrl: './create-genre.component.html',\n  styleUrls: ['./create-genre.component.css']\n})\nexport class CreateGenreComponent implements OnInit {\n\n  errors: string[]= [];\n  constructor(private router: Router, private genresServices: GenresService) { }\n ngOnInit(): void {\n \n  }\n\n  saveChanges(genresDTO: GenresModelDTO)\n  {\n    this.genresServices.CreateGenres(genresDTO).subscribe( ()=> {    \n        this.router.navigate(['/genres']);\n    }, error=> this.errors =ParseWebAPIsErrors(error));\n\n   \n  }\n\n\n}\n","<p>create-genre works!</p>\n\n\n<app-display-errors [errors]=\"errors\"></app-display-errors>\n<app-form-genres (onSaveChanges)=\"saveChanges($event)\" ></app-form-genres>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateActorComponent } from './actors/create-actor/create-actor.component';\nimport { EditActorComponent } from './actors/edit-actor/edit-actor.component';\nimport { IndexActorComponent } from './actors/index-actor/index-actor.component';\nimport { CreateGenreComponent } from './genres/create-genre/create-genre.component';\nimport { EditGenreComponent } from './genres/edit-genre/edit-genre.component';\nimport { IndexGenresComponent } from './genres/index-genres/index-genres.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { CreateMovieTheaterComponent } from './movie-theater/create-movie-theater/create-movie-theater.component';\nimport { EditMovieTheaterComponent } from './movie-theater/edit-movie-theater/edit-movie-theater.component';\nimport { IndexMovieTheaterComponent } from './movie-theater/index-movie-theater/index-movie-theater.component';\nimport { CreateMovieComponent } from './movies/create-movie/create-movie.component';\nimport { EditMovieComponent } from './movies/edit-movie/edit-movie.component';\nimport { MovieFilterComponent } from './movies/movie-filter/movie-filter.component';\nimport { MoviesListComponent } from './movies/movies-list/movies-list.component';\n\nconst routes: Routes = [\n  {\n    path:'', component: HomePageComponent\n  },\n  {\n    path:'genres', component: IndexGenresComponent\n  },\n  {\n    path:'genres/create', component: CreateGenreComponent\n  },\n  {\n    path:'genres/edit/:id', component: EditGenreComponent\n  },\n  \n\n  {\n    path:'movietheater', component: IndexMovieTheaterComponent\n  },\n  {\n    path:'movietheater/create', component: CreateMovieTheaterComponent\n  },\n  {\n    path:'movietheater/edit/:id', component: EditMovieTheaterComponent\n  },\n\n\n  {\n    path:'actors', component: IndexActorComponent\n  },\n  {\n    path:'actors/create', component: CreateActorComponent\n  },\n  {\n    path:'actors/edit/:id', component: EditActorComponent\n  },\n\n\n\n  {\n    path:'movies/create', component: CreateMovieComponent\n  },\n  {\n    path:'movies/edit/:id', component: EditMovieComponent\n  },\n\n  {\n    path:'movies/filter', component: MovieFilterComponent\n  },\n\n\n  // Wild-Card- Route\n  {\n    path:\"**\", redirectTo:''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-rating',\n  templateUrl: './rating.component.html',\n  styleUrls: ['./rating.component.css']\n})\nexport class RatingComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() rating=5;\n  \n\n  @Input() selectedRate=0;\n\n  @Output() onRating: EventEmitter<number> = new EventEmitter<number>();\n\n\n  maxratingArry =[];\n\n  previousRate=0;\n\n  ngOnInit(): void {\n\n    this.maxratingArry= Array(this.rating).fill(0);\n  }\n\n  handleMouseEnter(index: number)\n  {\n      this.selectedRate = index +1;\n  }\n\n  handleMouseLeave()\n  {\n    if(this.previousRate!==0)\n    {\n      this.selectedRate = this.previousRate;\n    }\n    else\n    {\n      this.selectedRate=0;\n    }    \n  }\n\n    \n  rate(index: number)\n  {\n    this.selectedRate = index+1;\n    this.previousRate= this.selectedRate;\n\n    this.onRating.emit(this.selectedRate);\n  }\n}\n","<mat-icon *ngFor=\"let i of this.maxratingArry; let index= index\"\n (mouseenter)=\"handleMouseEnter(index)\" (mouseleave)=\"handleMouseLeave()\"\n    (click)=\"rate(index)\" [ngClass]=\"{checked: selectedRate > index}\">\n    star\n</mat-icon>","<h3>{{this.developerName}}</h3>\n\n\n<app-generic-list [list]=\"movies\">\n\n    <ng-container loading>\n            This is loading....\n    </ng-container>\n\n    <ng-container content>\n\n        <div class=\"movies-container\">\n            <div *ngFor=\"let movie of this.movies; let i=index\" class=\"movie-container\">\n                <a>\n                    <img [src]=\"movie.imgPath\" alt=\"poster\">\n                </a>\n                <p>\n                    <a>{{this.movie.title}}</a>\n                </p>\n\n                <div>\n                    <a mat-flat-button color=\"primary\">\n                        Edit\n                    </a>\n\n                    <button mat-flat-button color=\"warn\">Delete</button>\n                </div>\n                 \n            </div>\n        </div>\n\n       \n    </ng-container>\n</app-generic-list>\n\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-movies-list',\n  templateUrl: './movies-list.component.html',\n  styleUrls: ['./movies-list.component.css']\n})\nexport class MoviesListComponent implements OnInit {\n\n   constructor() { }\n  \n  developerName: string =\"Tayyab\";\n  \n  @Input() movies;\n\n  ngOnInit(): void {\n\n  }\n\n  removeMovie(ind: number)\n  {\n   this.RemoveElementFromArray(ind);\n  }\n\n   RemoveElementFromArray(element: number) {\n    this.movies.forEach((value,index)=>{\n        if(value==element) this.movies.splice(index,1);\n    });\n}\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { movieCreateDTO } from '../movie.model';\n\n@Component({\n  selector: 'app-create-movie',\n  templateUrl: './create-movie.component.html',\n  styleUrls: ['./create-movie.component.css']\n})\nexport class CreateMovieComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n  SaveChanges(MovieForm: movieCreateDTO)\n  {\n    console.log(MovieForm);\n  }\n}\n","\n\n<app-form-movie (onSaveChanges)=\"SaveChanges($event)\"></app-form-movie>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}